name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      working-directory: backend
      run: npm ci

    - name: Create .env file from secrets
      working-directory: backend
      run: |
        echo "PORT=${{ secrets.PORT }}" >> .env
        echo "CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}" >> .env
        echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
        echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
        echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
        echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
        echo "JWT_SECRET_REFRESH=${{ secrets.JWT_SECRET_REFRESH }}" >> .env
        echo "JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }}" >> .env
        echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
        echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
        echo "GOOGLE_CALLBACK_URL=${{ secrets.GOOGLE_CALLBACK_URL }}" >> .env
        echo "SALT=${{ secrets.SALT }}" >> .env
        echo "TWILIO_ACCOUNT_SID=${{ secrets.TWILIO_ACCOUNT_SID }}" >> .env
        echo "TWILIO_AUTH_TOKEN=${{ secrets.TWILIO_AUTH_TOKEN }}" >> .env
        echo "TWILIO_PHONE_NUMBER=${{ secrets.TWILIO_PHONE_NUMBER }}" >> .env
        echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
        echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> .env
        echo "CACHE_TTL=${{ secrets.CACHE_TTL }}" >> .env
        echo "JWT_EMAIL_VERIFICATION_TOKEN_SECRET=${{ secrets.JWT_EMAIL_VERIFICATION_TOKEN_SECRET }}" >> .env
        echo "JWT_EMAIL_VERIFICATION_TOKEN_EXPIRATION_TIME=${{ secrets.JWT_EMAIL_VERIFICATION_TOKEN_EXPIRATION_TIME }}" >> .env
        echo "EMAIL_CONFIRMATION_URL=${{ secrets.EMAIL_CONFIRMATION_URL }}" >> .env
        echo "EMAIL_SERVICE=${{ secrets.EMAIL_SERVICE }}" >> .env
        echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" >> .env
        echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> .env
        echo "JWT_RESET_PSW_VERIFICATION_TOKEN_SECRET=${{ secrets.JWT_RESET_PSW_VERIFICATION_TOKEN_SECRET }}" >> .env
        echo "JWT_RESET_PSW_VERIFICATION_TOKEN_EXPIRATION_TIME=${{ secrets.JWT_RESET_PSW_VERIFICATION_TOKEN_EXPIRATION_TIME }}" >> .env
        echo "EMAIL_RESET_PSW_CONFIRMATION_URL=${{ secrets.EMAIL_RESET_PSW_CONFIRMATION_URL }}" >> .env
        echo "TWITTER_ACCESS_TOKEN=${{ secrets.TWITTER_ACCESS_TOKEN }}" >> .env
        echo "TWITTER_ACCESS_SECRET_TOKEN=${{ secrets.TWITTER_ACCESS_SECRET_TOKEN }}" >> .env
        echo "TWITTER_API_KEY=${{ secrets.TWITTER_API_KEY }}" >> .env
        echo "TWITTER_API_KEY_SECRET=${{ secrets.TWITTER_API_KEY_SECRET }}" >> .env
        echo "TWITTER_CLIENT_ID=${{ secrets.TWITTER_CLIENT_ID }}" >> .env
        echo "TWITTER_CLIENT_SECREY=${{ secrets.TWITTER_CLIENT_SECREY }}" >> .env
        echo "AWS_S3_ACCESS_KEY=${{ secrets.AWS_S3_ACCESS_KEY }}" >> .env
        echo "AWS_S3_ACCESS_SECRET_KEY=${{ secrets.AWS_S3_ACCESS_SECRET_KEY }}" >> .env
        echo "AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }}" >> .env
        echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
        echo "GOOGLE_TRANSLATE_KEY=${{ secrets.GOOGLE_TRANSLATE_KEY }}" >> .env
        echo "GOOGLE_MAPS_KEY=${{ secrets.GOOGLE_MAPS_KEY }}" >> .env

    - name: Build the project (if applicable)
      working-directory: backend
      run: npm run build --if-present

    - name: Run tests
      working-directory: backend
      run: npm test
